version: 2.1

orbs:
  shellcheck: circleci/shellcheck@2.2.2

workflows:

  on-pull-request-update:
    jobs:
      - prepare:
          filters:
            branches:
              ignore: master
      - lint:
          requires:
            - prepare
          filters:
            branches:
              ignore: master
      - build:
          requires:
            - lint
          filters:
            branches:
              ignore: master

  on-master-merge:
    jobs:
      - publish:
          filters:
            branches:
              only: master


jobs:

  prepare:
    docker:
      - image: 'cimg/base:stable'
    working_directory: ~/app
    steps:
      - checkout
      - run: |
          git diff HEAD~1..HEAD --name-only --diff-filter=d > changelist
      - persist_to_workspace:
          root: .
          paths:
            - .

  lint:
    docker:
      - image: 'cimg/base:stable'
    working_directory: ~/app
    steps:
      - attach_workspace:
          at: .
      - shellcheck/install
      # below step better belongs to the prepare job
      - run: |
          curl -s https://api.github.com/repos/hadolint/hadolint/releases/latest \
            | grep browser_download_url \
            | grep Linux-x86 \
            | cut -d '"' -f 4 \
            | wget -qi - -O hadolint - \
          && chmod +x hadolint
      - run: |
          if ! cat changelist | grep "\.\(sh\|ash\|bash\)"
          then
            echo "No shell scripts modified, skipping shellcheck"
          else
            shellcheck $(cat changelist | grep "\.\(sh\|ash\|bash\)")
          fi
      - run: |
          if ! cat changelist | grep "\(Dockerfile\|\.dockerfile\)"
          then
            echo "No dockerfiles modified, skipping hadolint"
          else
            echo "Running hadolint"
          fi

  build:
    machine: true
    working_directory: ~/app
    steps:
      - attach_workspace:
          at: .
      - run: |
          if ! cat changelist | grep "\(Dockerfile\|\.dockerfile\)"
          then
            echo "No dockerfiles modified, skipping build"
          else
            docker build \
              --build-arg NODE_MAJOR_VERSION=14 \
              --build-arg NPM_GLOBAL_MODULES="grunt gulp eslint nodemon" \
              -t node-docker-devenv:with-global-addons .
            docker build \
              --build-arg NODE_MAJOR_VERSION=12 \
              -t node-docker-devenv:12-no-global-addons .
          fi

  publish:
    docker:
      - image: cimg/base:2020.01
    steps:
      - run: echo "published!"
